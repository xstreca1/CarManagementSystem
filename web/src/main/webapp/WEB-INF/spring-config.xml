<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <!-- configuring spring security-->
    <security:http auto-config="true" use-expressions="true">
        <security:access-denied-handler error-page="/403" />
        <!--when URL fragment /main is accessed, security interceptor will be invoked
        and can be accessed by a user having 'ROLE_ADMIN' authorization-->
        <security:intercept-url pattern="/main*" access="hasAnyRole('ROLE_USER, ROLE_ADMIN')" />
        <!-- custom login page is mentioned using login-page attribute -->
        <security:form-login login-page="/loginPage" default-target-url="/main"
                     authentication-failure-url="/loginError"/>
    </security:http>
   
    <!-- -->
    <security:authentication-manager>
        <security:authentication-provider>
            <!-- Specify the authentication and authorization credentials for valid users -->
            <security:user-service>
                <security:user name="admin" password="admin" authorities="ROLE_ADMIN" />
                <security:user name="rest" password="rest"
                      authorities="ROLE_REST" />
            </security:user-service>
        </security:authentication-provider>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT username, password, true FROM PERSON WHERE username = ?"
                               authorities-by-username-query="SELECT username, CASE WHEN(isAdmin = TRUE) THEN 'ROLE_ADMIN' ELSE 'ROLE_USER' END as authority FROM PERSON WHERE username = ?" />
        </security:authentication-provider>
    </security:authentication-manager>
   
</beans>